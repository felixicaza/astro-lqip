---
import type { LocalImageProps, RemoteImageProps } from 'astro:assets'
import type { Props as LqipProps } from '../types'
import type { HTMLAttributes } from 'astro/types'

import { PREFIX } from '../constants'

import { resolveImageMetadata } from '../utils/resolveImageMetadata'
import { renderSVGNode } from '../utils/renderSVGNode'
import { getLqipStyle } from '../utils/getLqipStyle'
import { getLqip } from '../utils/getLqip'

import { Image as ImageComponent } from 'astro:assets'

type Props = (LocalImageProps | RemoteImageProps) & LqipProps & {
  parentAttributes?: HTMLAttributes<'div'>
}

const { class: className, lqip = 'base64', lqipSize = 4, parentAttributes = {}, ...props } = Astro.props as Props

const isDevelopment = import.meta.env.MODE === 'development'

const imageMetadata = await resolveImageMetadata(props.src)
const lqipImage = await getLqip(imageMetadata, isDevelopment, lqip, lqipSize)

let svgHTML = ''

if (lqip === 'svg' && Array.isArray(lqipImage)) {
  svgHTML = renderSVGNode(lqipImage as [string, Record<string, any>, any[]])
}

const lqipStyle = getLqipStyle(lqip, lqipImage, svgHTML)

const forbiddenVars = ['--lqip-background', '--z-index', '--opacity']
const styleProps = parentAttributes.style ?? {}

for (const key of Object.keys(styleProps)) {
  if (forbiddenVars.includes(key)) {
    console.warn(
      `${PREFIX} The CSS variable “${key}” should not be passed in \`parentAttributes.style\` because it can override the functionality of LQIP.`
    )
  }
}

const combinedStyle = {
  ...styleProps,
  ...lqipStyle
}

const combinedParentAttributes = {
  ...parentAttributes,
  style: combinedStyle
}
---

<style is:inline>
  div[data-astro-lqip] {
    --opacity: 1;
    --z-index: 0;

    position: relative;
    display: inline-block;
    width: fit-content;
    height: fit-content;
  }

  div[data-astro-lqip]::after {
    content: "";
    inset: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    pointer-events: none;
    transition: opacity 1s;
    opacity: var(--opacity);
    z-index: var(--z-index);
    background: var(--lqip-background);
    background-size: cover;
    background-position: 50% 50%;
  }

  div[data-astro-lqip] img {
    z-index: 1;
    position: relative;
    overflow: hidden;
  }
</style>

<div class={className} data-astro-lqip {...combinedParentAttributes}>
  <ImageComponent
    {...props}
    class={className}
    onload="parentElement.style.setProperty('--z-index', 1), parentElement.style.setProperty('--opacity', 0)"
  />
</div>
