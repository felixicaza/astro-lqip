---
import type { LocalImageProps, RemoteImageProps } from 'astro:assets'
import type { HTMLAttributes } from 'astro/types'
import type { Props as LqipProps } from '../types'

import { useLqipImage } from '../utils/useLqipImage'

import { Image as ImageComponent } from 'astro:assets'

import '../styles/lqip.css'

type Props = (LocalImageProps | RemoteImageProps) & LqipProps & {
  parentAttributes?: HTMLAttributes<'div'>
}

const { class: className, lqip = 'base64', lqipSize = 4, parentAttributes = {}, ...props } = Astro.props as Props

const isDevelopment = import.meta.env.MODE === 'development'
const isPrerendered = Astro.isPrerendered

const { combinedStyle } = await useLqipImage({
  src: props.src,
  lqip,
  lqipSize,
  styleProps: parentAttributes.style ?? {},
  isDevelopment,
  isPrerendered
})

const combinedParentAttributes = {
  ...parentAttributes,
  style: combinedStyle
}
---

<div class={className} data-astro-lqip {...combinedParentAttributes}>
  <ImageComponent
    {...props}
    class={className}
    onload="parentElement.style.setProperty('--z-index', 1), parentElement.style.setProperty('--opacity', 0)"
  />
</div>
